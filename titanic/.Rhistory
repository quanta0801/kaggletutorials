install.packages("rJava")
install.packages("caret")
install.packages("caret")
install.packages("shiny")
install.packages("rCharts")
install.packages("slidify")
install.packages("Slidify")
install.packages("rjson")
install.packages("googleVis")
install.packages("shinyapps")
install.packages("devtools")
install.packages("Rtools")
install_github("ropensci_plotly")
library(devtools)
library("devtools")
install.packages("devtools")
install_github("ropensci_plotly")
install.packages("Rtools")
install.packages("ggplot2")
library("devtools")
install_github("ropensci/plotly")
a <- c(89,72,94,69)
b <- (a-mean(a))/sd(a)
b
a <- c(7921,5184,8836,4761)
b <- (a-mean(a))/range(a)
b
mean(a)
range(a)
diff(range(a))
b <- (a-mean(a))/diff(range(a))
b
help(summary)
?summary
a <- c(7921,5184,8839,4761)
b <- (a-mean(a))/diff(range(a))
b
market <- read.table("c:/Users/YuHeng/Desktop/Current Product Campaigns-B1916R3543J112914-20141231-20150130.xlsx")
market <- read.csv("c:/Users/YuHeng/Desktop/Current Product Campaigns-B1916R3543J112914-20141231-20150130.xlsx")
market <- read.csv("c:/Users/YuHeng/Desktop/product.csv")
View(market)
names(market)
product.list <- names(market)[-1]
market[1,]
market[1,-1]
product.list[market[1,-1]]
product.list[,market[1,-1]]
product.list[as.vector(market[1,-1])]
as.vector(market[1,-1])
as.boolean
market[1]
t(market)[1]
t(market)
t(market)[1]
market[1,-1]==1
as.vector(market[1,-1])
test <- as.vector(market[1,-1])
?as.vector(market[1,-1])
try(as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric"))
as.vector(data.frame(x = 1:3, y = 5:7), mode = "numeric")
as.vector(data.frame(x = 1:3, y = 5:7), mode = "integer")
as.vector(data.frame(x = 1:3, y = 5:7))
test <- unlist(market[1,-1])
product.list[test]
product.list[test==1]
product.list[which(test==1)]
?paste(product.list[which(test==1)
?paste(product.list[which(test==1))
?paste
paste(product.list[which(test==1), sep=", ", collapse=T)
paste(product.list[which(test==1)], sep=", ", collapse=T)
paste(product.list[which(test==1)], sep=", ")
paste(product.list[which(test==1)], collapse= ", ")
?gsub
test2 <- paste(product.list[which(test==1)], collapse= ", ")
gsub("\.","\ ", test2)
gsub("\\.","\\ ", test2)
length(market)
nrows(market)
nrow(market)
n <- nrow(market)
marketproduct <- character(n)
unlist(market[i,-1])
for (i in 1:n){
productID <- unlist(market[i,-1])
marketproduct[i] <- paste(product.list[which(productID==1)], collapse= ", ")
}
cbind(market[1],marketproduct)
output <- cbind(market[1],marketproduct)
output <- cbind(market[1],marketproduct)
View(output)
marketproduct <- gsub("\\.", "\\ ", marketproduct)
output <- cbind(market[1],marketproduct)
View(output)
?write.csv
write.csv(output, "c:/Users/YuHeng/Desktop/productout.csv")
hierachy <- read.csv("c:/Users/YuHeng/Desktop/hierachy.csv")
commercial <- character(n); consumer <- character(n); xbox <- character(n)
product.list
hierachy[1]
product.list
product.list <- gsub("\\.", "\\ ", product.list)
product.list
market <- read.csv("c:/Users/YuHeng/Desktop/product.csv")
product.list <- names(market)[-1]
product.list <- gsub("\\.", "\\ ", product.list)
product.list
product.list==hierachy[1]
hierachy[1]
product.list %in% hierachy[1])
product.list %in% hierachy[1]
hierachy[1]
product.list
product.list %in% as.character(hierachy[1])
as.character(hierachy[1])
?read.csv
hierachy <- read.table("c:/Users/YuHeng/Desktop/hierachy.csv")
hierachy <- read.table("c:/Users/YuHeng/Desktop/hierachy.csv", sep=",")
hierachy
hierachy <- read.csv("c:/Users/YuHeng/Desktop/hierachy.csv")
View(hierachy)
hierachy[1]
product.list
test <- hierachy
test <- hierachy[1]
product.list %in% unlist(hierachy[1])
hierach[2][which(product.list %in% unlist(hierachy[1]))]
hierachy[2][which(product.list %in% unlist(hierachy[1]))]
all.products <- read.csv("c:/Users/YuHeng/Desktop/product.csv")
all.products <- all.products[all.products$Product.Detail!="Other",]
all.products$L.O.B[all.products$L.O.B=="Shared"] <- "Commercial"
countries <- unique(all.products$Brand.Name)
lob <- unique(all.products$L.O.B)
nCountries <- length(countries)
products <- sapply(countries, function(y){
countryID <- all.products$Brand.Name==y
sapply(lob, function(x){
lobID <- all.products$L.O.B==x
paste(all.products$Product.Detail[countryID&lobID], collapse=", ")
})
})
output <- data.frame(as.character(countries), t(products)[,1:3])
names(output) <- c("Market", "Commercial", "Consumer", "Xbox")
write.csv(output, "c:/Users/YuHeng/Desktop/activeProduct.csv")
all.products <- read.csv("c:/Users/YuHeng/Desktop/products.csv")
all.products <- all.products[all.products$Product.Detail!="Other",]
all.products$L.O.B[all.products$L.O.B=="Shared"] <- "Commercial"
countries <- unique(all.products$Brand.Name)
lob <- unique(all.products$L.O.B)
nCountries <- length(countries)
products <- sapply(countries, function(y){
countryID <- all.products$Brand.Name==y
sapply(lob, function(x){
lobID <- all.products$L.O.B==x
paste(all.products$Product.Detail[countryID&lobID], collapse=", ")
})
})
output <- data.frame(as.character(countries), t(products)[,1:3])
names(output) <- c("Market", "Commercial", "Consumer", "Xbox")
write.csv(output, "c:/Users/YuHeng/Desktop/activeProduct.csv")
write.csv(output, "c:/Users/YuHeng/Desktop/activeProduct.csv", row.names=F)
install.packages('tm')
install.packages('openNLP')
install.packages('tm.plugin.dc')
install.packages('tm.plugin.mail')
install.packages('tm.plugin.alceste')
install.packages(C('tm.plugin.factiva', 'tm.plugin.lexisnexis', 'tm.plugin.europresse'))
install.packages('tm.plugin.factiva')
install.packages('tm.plugin.lexisnexis')
install.packages('tm.plugin.europresse')
install.packages('tm.plugin.webmining')
install.packages('RcmdrPlugin.temis')
install.packages('RWeka')
install.packages(c("BradleyTerry2", "car", "colorspace", "devtools", "digest", "googleVis", "httr", "knitr", "manipulate", "plotrix", "Rcpp", "RcppEigen", "rmarkdown", "rstudioapi", "shiny", "yhatr"))
install.packages('caret')
install.packages("caretEnsemble")
install.packages("caret")
library(caret)
library(caretEsemble)
library(caretEnsemble)
session.info
sessioninfo
sessionInfo()
install.packages('dplyr')
library(dplyr)
install.packages(c("boilerpipeR","corpora","gsubfn","kernlab","KoNLP","koRpus",
"languageR","lda","lsa","maxent","movMF","openNLP","qdap",
"RcmdrPlugin.temis","RKEA","RTextTools","RWeka","skmeans",
"SnowballC","tau","textcat","textir","tmÂ (core)",
"tm.plugin.alceste","tm.plugin.dc","tm.plugin.europresse",
"tm.plugin.factiva","tm.plugin.lexisnexis","tm.plugin.mail",
"tm.plugin.webmining","topicmodels","wordcloud","wordnet",
"zipfR"))
lapply(packages, require, character.only=T)
packages <- c("boilerpipeR","corpora","gsubfn","kernlab","KoNLP","koRpus",
"languageR","lda","lsa","maxent","movMF","openNLP","qdap",
"RcmdrPlugin.temis","RKEA","RTextTools","RWeka","skmeans",
"SnowballC","tau","textcat","textir","tm (core)",
"tm.plugin.alceste","tm.plugin.dc","tm.plugin.europresse",
"tm.plugin.factiva","tm.plugin.lexisnexis","tm.plugin.mail",
"tm.plugin.webmining","topicmodels","wordcloud","wordnet","zipfR")
lapply(packages, require, character.only=T)
sessionInfo()
sessionInfo()
library(KoNLP)
sessionInfo()
sessionInfo()
install.packages("stringi")
install.packages("ff")
install.packages(c("abind", "colorspace", "manipulate"))
update.packages(ask='graphics',checkBuilt=TRUE)
q()
library(Hmisc)
?Lag
a <- 1:5
library(Hmisc)
b <- Lag(a, -1)
b <- Lag(a, 1)
idx0 <- 1:10
index <- data.table(idx0)
library(data.table)
index <- data.table(idx0)
index
ngram <- 4
for (i in 1:ngram){
index[, idx[i] := Lag(idx0, i)]
}
idx <- paste("idx", 1:ngram, sep="")
for (i in 1:ngram){
index[, idx[i] := Lag(idx0, i)]
}
library(Hmisc)
for (i in 1:ngram){
index[, idx[i] := Lag(idx0, i)]
}
index
?regex
install.packages("gbm")
library(gbm)
install.packages("randomForest")
library(randomForest)
install.packages("e1071")
library(e1071)
install.packages("glmnet")
library(glmnet)
install.packages("tau")
library(tau)
install.packages("Matrix")
install.packages("Matrix")
library(Matrix)
install.packages("SOAR")
library(SOAR)
install.packages("forEACH")
library(forEach)
install.packages("forEach")
library(forEach)
install.packages("DoMC")
library(DoMC)
install.packages("DoParallel")
library(DoParallel)
install.packages("doParallel")
library(doParallel)
library(stringi)
?stri_split_boundaries(input, type="word", skip_word_none=TRUE)
input <- "this is an example"
input <- stri_split_boundaries(input, type="word", skip_word_none=TRUE, simplify = T)
input
input <- gsub("^\\d+$", "<number>", gsub("[^[:alnum:]]", "", tolower(input)))
while (length(input) < 4){
input <- c("", input)
}
input <- lapply(1:4, tail, x=input)
input
x <- c(6.9, 6.7, 6.9, 5.8, 6.8)
y <- c(3.1, 3.1, 3.1, 2.7, 3.2)
corr(x,y)
cor(x,y)
?cor(x,y)
?dnorm
dnorm(1,-2,3)
dnorm(1,2,1)
a <- dnorm(1,-2,3)
b <- dnorm(1,2,1)
(0.3 * a) / (0.3 * a + 0.7 * b)
-4  + 5 + 14
c(-4, 5, 14)
c <- c(-4, 5, 14)
sd(c)
?install.packages()
install.packages("caret",dependencies = NT)
install.packages("caret",dependencies = T)
install.packages("dplyr",dependencies = T)
install.packages("ggplot2",dependencies = T)
library(tm)
install.packages("tm",dependencies = T)
sum_three = c(0, 1, 2)
for (i in 4:28) {
sum_three[i]=sum(sum_three[i-3:i-1]
}
for (i in 4:28) {
sum_three[i]=sum(sum_three[i-3:i-1])
}
for (i in 4:28) {
sum_three[i]=sum(sum_three[(i - 3):(i - 1)])
}
sum_three[11]
sum_three[21]
data <- read.csv("c:/Users/YuHeng/Desktop/Programming Assignment 1 Data New/ExcelFormattedGISTEMPData2CSV.csv")
str(data)
decade <- data$year // 10
decade <- data$year %/% 10
decade <- data$Year %/% 10
decade <- decade * 10
library(data.table)
data <- fread("c:/Users/YuHeng/Desktop/Programming Assignment 1 Data New/ExcelFormattedGISTEMPData2CSV.csv")
data
decade <- data$Year %/% 10
data[, decade := Year %/% 10 * 10]
data
library(dplyr)
sumdata <- summarise(data, decAveGlo = mean(Glob))
sumdata <- summarise(groupby(data, decade), decAveGlo = mean(Glob))
sumdata <- summarise(group_by(data, decade), decAveGlo = mean(Glob))
sumdata
sumdata <- summarise(group_by(data, decade), decAveGlo = mean(Glob), decAveNHem = mean(NHem), decAveSHem = mean(SHem))
sumdata
data
plot(Year ~ Glob, data)
plot(Glob ~ Year, data)
plot(Glob ~ Year, data, type = 'l')
?plot(Glob ~ Year, data, type = 'l')
?plot(x=Year, y=Glob, data = data, type = 'l')
plot(x=Year, y=Glob, data = data, type = 'l')
plot(Glob, Year, data = data, type = 'l')
plot(Glob ~ Year, data = data, type = 'l')
plot(decAveGlob ~ decade, data = sumdata, type = 'l')
plot(decAveGlo ~ decade, data = sumdata, type = 'l')
plot(Glob ~ Year, data = data, type = 'l')
plot(Glob ~ Year, data = data, type = 'l', xlab="")
plot(Glob ~ Year, data = data, type = 'l', ylab = "Deviation from Global Average")
plot1 <- plot(Glob ~ Year, data = data, type = 'l', ylab = "Deviation from Global Average")
PNG("c:/R/plot1.png", width = 1024, height = 768, type = "cairo")
plot(Glob ~ Year, data = data, type = 'l', ylab = "Deviation from Global Average")
dev.off()
png("c:/R/plot1.png", width = 1024, height = 768, type = "cairo")
plot(Glob ~ Year, data = data, type = 'l', ylab = "Deviation from Global Average")
dev.off()
getwd()
png("plot1.png", width = 1024, height = 768, type = "cairo")
plot(Glob ~ Year, data = data, type = 'l', ylab = "Deviation from Global Average")
dev.off()
packages <- c("caret", "data.table", "devtools", "doParallel", "dplyr", "e1071"
"ggplot2", "glmnet", "plyr", "reshape2", "shiny", "stringi",
"stringr", "tm")
packages <- c("caret", "data.table", "devtools", "doParallel", "dplyr", "e1071",
"ggplot2", "glmnet", "plyr", "reshape2", "shiny", "stringi",
"stringr", "tm")
install.packages(packages, dependencies=T)
library(rpart)
setwd("~/GitHub/kaggletutorials/titanic/")
library(mice)
install.packages(mice)
install.packages("mice")
setwd("~/GitHub/kaggletutorials/titanic/")
library(party)
